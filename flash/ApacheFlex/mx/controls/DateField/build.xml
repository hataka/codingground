<?xml version="1.0" encoding="UTF-8"?>
<!--// -*- mode: xml -*-  Time-stamp: 2016/04/28 21:34
/*================================================================
 * title: 
 * file: build.xml
 * path: 
 * url:  
 * created: Time-stamp: 2016/04/28 21:34 //<2016-01-26 14:25:26 kahata>
 * revision: $Id$
 * Programmed By: kahata
 * To compile: F:\VCSharp\Flashdevelop5.1.1-LL\FlashDevelop\Bin\Debug\Apps\flexairsdk\4.6.0+21.0.0
 * To run: 
 * link: 
 * description: 
 * 	Antビルドファイル内でプロパティの文字列置換
 *	http://blog.onpu-tamago.net/entry/20120211/1328976708
 *		<property name="invalue" value="somevalue"/>
 *			<exec executable="sed" inputstring="${invalue}" outputproperty="outvalue">
 *				<arg value="-e" />
 *				<arg value="s/some/dest/" />
 *			</exec>
 *		<echo>outvalue = ${destvalue}</echo> 
 *
 * http://stackoverflow.com/questions/1176071/replacing-characters-in-ant-property
 * 		<property name="before" value="This is a value"/>
 * 		<script language="javascript">
 * 			var before = project.getProperty("before");
 *			project.setProperty("after", before.replaceAll(" ", "_"));
 *		</script>
 *		<echo>after=${after}</echo>
 *================================================================*/ -->
<project basedir="F:\Flash\ApacheFlex\mx\controls\DateField" default="build" name="DateFieldExample">
	<description>
		build flex application with apache ant.
	</description>

 <!-- 
  <import file="${config.dir}/properties.xml" />
  <import file="${config.dir}/jnlp.xml" />

  <available file="${dir}" type="dir"/>
  <target name="check-abc">
    <available file="abc.txt" property="abc.present"/>
  </target>

  <target name="do-if-abc" depends="check-abc" if="abc.present">
   .....
  </target> 
--> 
  <!-- =================================================================== -->
  <!-- properties                                     -->
  <!-- =================================================================== -->
	<property name="appname" value="DateFieldExample"/>
	<property name="srcfile.path" value=""/>
	<!-- property name="apppath" value=""/ -->
	<property name="server.root" value="http://hata2"/>
	<!-- property name="server.root" value="http://kahata.travel.coocan.jp"/ -->
	<property name="common_lib.js" value="F:\Flash\ant\common_lib.js" />

	<dirname property="antfile.dir" file="${ant.file}"/>
	<basename property="antfile.name" file="${ant.file}"/>
	<basename property="antfile.body" file="${ant.file}" suffix="xml"/>

	<dirname property="srcfile.dir" file="${srcfile.path}"/>
	<basename property="srcfile.name" file="${srcfile.path}"/>
	<property name="srcfile.ext" value="as"/>
	<property name="srcfile.body" value="${srcfile.path}"/>

	<property name="working.dir" value="F:\Flash\ApacheFlex\mx\controls\DateField"/>
	<property name="document.root" value="F:"/>
	<property name="server.root" value="http://hata2"/>
	<!-- <property name="server.root" value="http://kahata.travel.coocan.jp"/> 	-->
	<property name="site.dir" value="${server.root}/F:\Flash\ApacheFlex\mx\controls\DateField/"/> 
<!--
	<property name="sdk.version" value="4.1.0"/>
	<property name="sdk.dir" value="${eclipse.home}/sdks/${sdk.version}"/>
	<property name="FLEX_HOME" value="${sdk.dir}"/>
	<property name="DEPLOY_DIR" value="c:/jrun4/servers/default/default-war"/> 
	<property name="COMPONENT_ROOT" value="components"/> 
	<property file="build.properties"/>
-->
  <property name="FD_HOME" value="F:/Programs/FlashDevelop" />
	<property name="FLEX_HOME" value="${FD_HOME}/Tools/flexsdk"></property>
	<property name="APP_ROOT" value="."></property>
	<property name="src.dir" value="${basedir}"/>
	<property name="doc.dir" value="${basedir}/doc"/>
	<property name="lib.dir" value="${basedir}/lib"/>
  <property name="appname_main" value="${appname}"/>
  <property name="swfOut" value="${appname}.swf" />
  <!-- point this to your local copy of the flash player -->
  <property name="flash.player" location="${FLEX_HOME}/runtimes/player/11.1/win/FlashPlayerDebugger.exe" />
	<property name="doxygen.dir"  value="${APP_ROOT}/doxygen" />
  <condition property="exists.doxygen">
    <available file="${doxygen.dir}" type="dir"/>
  </condition>

  <!-- =================================================================== -->
  <!-- ant task definition                                     -->
  <!-- =================================================================== -->
	<taskdef classpath="${FLEX_HOME}/ant/lib/flexTasks.jar" resource="flexTasks.tasks">
	</taskdef>

  <!-- =================================================================== -->
  <!-- initialization                                     -->
  <!-- =================================================================== -->
	<target name="init">
		<script language="javascript"> <![CDATA[
			var lib = project.getProperty("common_lib.js");
    	eval(''+new String(org.apache.tools.ant.util.FileUtils.readFully(new java.io.FileReader(lib))));

			var working_dir = project.getProperty("working.dir");
			var document_root = project.getProperty("document.root");
			var server_root = project.getProperty("server.root");
			var site_dir = server_root + working_dir.replaceAll(document_root, "");
			site_dir = site_dir.replace(/\\/g,"/");
			project.setProperty("site.dir", site_dir);
			project.setProperty("srcfile.ext", fileext(''+project.getProperty("srcfile.name")));			
			project.setProperty("srcfile.body", filebody(''+project.getProperty("srcfile.name")));			
		  /*
			function basename(path, suffix) {
				//var reg=/(.*)(?:\.([^.]+$))/;
				//return filepath.match(reg)[0];
				var b = path;
				var lastChar = b.charAt(b.length - 1);
				if (lastChar === '/' || lastChar === '\\') {
					b = b.slice(0, -1);
				}
				b = b.replace(/^.*[\/\\]/g, '');
				if (typeof suffix === 'string' && b.substr(b.length - suffix.length) == suffix) {
					b = b.substr(0, b.length - suffix.length);
				}
				return b;
			}

			function fileext(filepath){
				//var reg=/(.*)(?:\.([^.]+$))/;
				//return filepath.match(reg)[2];
				var base_name = basename(path);
				return base_name.slice(base_name.lastIndexOf(".")+1);
			}

			function filebody(filepath){
				//var reg=/(.*)(?:\.([^.]+$))/;
				//return filepath.match(reg)[1];
				var base_name = basename(path);
				return base_name.substring(0, base_name.lastIndexOf("."));
			}
			*/
		]]></script>
		<echo>site.dir=${site.dir}</echo>
	</target>

	<target name="test" depends="init">
		<echo message="antfile.dir = ${antfile.dir}"></echo>
		<echo message="ant.file = ${ant.file}"></echo>
		<echo message="srcfile,dir = ${srcfile.dir}"></echo>
		<echo message="srcfile.path = ${srcfile.path}"></echo>
		<echo message="srcfile.name = ${srcfile.name}"></echo>
		<echo message="srcfile.ext = ${srcfile.ext}"></echo>
		<echo message="srcfile.body = ${srcfile.body}"></echo>
		<!--
		<echo message="base,name = ${base.name}"></echo>
		<echo message="suffix.name = ${suffix.name}"></echo>
		<echo>${current.target.dir}</echo>
		-->
	</target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message="" />
    <echo message="" />
    <echo message="${Name} Build file" />
    <echo message="-------------------------------------------------------------" />
    <echo message="" />
    <echo message=" available targets are:" />
    <echo message="" />
    <echo message="   compile  - compiles the source code (default)" />
    <echo message="   run      - execute the exsample" />
    <echo message="   package  - generates the ${name}.jar file" />
    <echo message="   javadoc  - generates the API documentation" />
    <echo message="   clean    - cleans up the directory" />
    <echo message="" />
    <echo message=" See the comments inside the build.xml file for more details." />
    <echo message="-------------------------------------------------------------" />
    <echo message="" />
    <echo message="" />
  </target>

  <!-- =================================================================== -->
  <!-- execution                                                           -->
  <!-- =================================================================== -->
	<target name="build" depends="init">
		<mxmlc 
				file="${APP_ROOT}/${appname}.mxml" 
				output="${APP_ROOT}/${swfOut}"
				static-link-runtime-shared-libraries="true"
				actionscript-file-encoding="UTF-8" 
				keep-generated-actionscript="true">
				<!-- incremental="true"> -->
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"></load-config>
			<!-- List of path elements that form the roots of ActionScript class hierarchies. --> 
			<source-path path-element="${FLEX_HOME}/frameworks"/> 
			<compiler.source-path path-element="${FLEX_HOME}/frameworks"></compiler.source-path>
			<compiler.source-path path-element="${APP_ROOT}"></compiler.source-path>
			<!-- Set size of output SWF file. --> 
			<default-size width="800" height="600"/> 
			<!-- List of SWC files or directories that contain SWC files. --> 
			<!--
			<compiler.library-path dir="${FLEX_HOME}/frameworks" append="true"> 
				<include name="libs" /> 
				<include name="../bundles/{locale}" /> 
			</compiler.library-path> 
 			<compiler.library-path dir="${APP_ROOT}/libs" append="true">
				<include name="*.swc" />
			</compiler.library-path>
			-->
		</mxmlc>
	</target>

	<target name="run" depends="build">
		<exec executable="cmd">
			<arg line="/c" />
			<arg line="${swfOut}" />
		</exec>
	</target>

	<target name="player" depends="build">
		<exec executable="${flash.player}">
			<arg line="${APP_ROOT}/${swfOut}" />
		</exec>
	</target>

	<target name="flashView" description="Click=PluginCommand,Tag=FlashViewer.Document;$(CurProjectDir)\DateFieldExample.swf">
		<exec executable="${flash.player}">
			<arg line="${APP_ROOT}/${swfOut}" />
		</exec>
	</target>

	<target name="chrome" depends="build">
		<exec executable="C:\Program Files (x86)\Google\Chrome\Application\chrome.exe">
			<arg line="${APP_ROOT}\${swfOut}" />
		</exec>
	</target>

	<target name="firefox" depends="build">
		<exec executable="C:\Program Files\Mozilla Firefox\firefox.exe">
			<arg line="${APP_ROOT}\${swfOut}" />
		</exec>
	</target>

	<target name="ie" depends="build">
		<exec executable="C:\Program Files\Internet Explorer\iexplore.exe">
			<arg line="${APP_ROOT}\${swfOut}" />
		</exec>
	</target>

	<target name="hta" depends="build">
		<exec executable="C:\WINDOWS\system32\mshta.exe">
			<arg line="${APP_ROOT}\${swfOut}" />
		</exec>
	</target>

	<target name="air" depends="build">
		<exec executable="${FD_HOME}/Tools/flexsdk/bin/adl.exe">
			<arg line="-nodebug" />
			<arg line="${APP_ROOT}/${appname}-app.xml" />
		</exec>
	</target>

	<target name="doxygen" depends="build">
		<exec executable="doxygen.exe">
			<arg line="F:/Flash/Doxyfile" />
		</exec>
	</target>

  <!-- =================================================================== -->
  <!-- utilities                                                           -->
  <!-- =================================================================== -->
	<target name="nextftp" depends="build">
		<exec executable="C:\Program Files\NextFTP\NEXTFTP.EXE">
			<!--
			<arg line="F:/Flash/Doxyfile" />
			-->
		</exec>
	</target>







	<target name="asdoc">
	<!-- タスク定義 -->
	<!--
		<available property="flexTasksJar" value="${sdk.dir}/lib/flexTasks.jar" file="${sdk.dir}/lib/flexTasks.jar"/>
		<available property="flexTasksJar" value="${sdk.dir}/ant/lib/flexTasks.jar" file="${sdk.dir}/ant/lib/flexTasks.jar"/>
		<taskdef resource="flexTasks.tasks" classpath="${flexTasksJar}"/>
	-->
	<!-- ASDoc -->
		<asdoc output="${doc.dir}"
			lenient="true" failonerror="true"
			warnings="false" strict="false" locale="ja_JP" fork="true"
			main-title="ドキュメントタイトル"
			window-title="ウインドウタイトル"
			footer="フッター">
		<doc-sources path-element="${src.dir}"/>

		<!-- 外部ライブラリ（必要に応じて) -->
		<!--
		<external-library-path dir="${lib.dir}">
			<include name="mylib.swc" />
		</external-library-path>
		<external-library-path dir="${sdk.dir}//frameworks/libs/air">
			<include name="airglobal.swc" />
		</external-library-path>
		-->
		<!--
		<jvmarg line="${asdoc.jvm.args}"/>
		-->
		</asdoc>
	</target>

	<target name="swc"> 
		<compc  
			output="${DEPLOY_DIR}/MyComps.swc" 
			include-classes="custom.MyButton custom.MyLabel"> 
			<source-path path-element="${basedir}/components"/> 
			<include-file name="f1-1.jpg" path="assets/images/f1-1.jpg"/> 
			<include-file name="f1-2.jpg" path="assets/images/f1-2.jpg"/> 
			<include-file name="f1-3.jpg" path="assets/images/f1-3.jpg"/> 
			<include-file name="f1-4.jpg" path="assets/images/f1-4.jpg"/> 
			<include-file name="main.css" path="assets/css/main.css"/> 
		</compc> 
	</target> 

	<target name="wrapper" depends="build"> 
		<mkdir dir="${APP_ROOT}/dist"/>
		<copy file="${APP_ROOT}/${swfOut}" tofile="${APP_ROOT}/dist/${swfOut}"/>
		<html-wrapper 
			title="Welcome to My Flex App" 
			file="index.html" 
			height="600" 
			width="800" 
			application="app" 
			swf="${appname}" 
			history="true" 
			express-install="true" 
			version-detection="true" 
			output="${APP_ROOT}/dist"/> 
	</target> 

	<target name="clean">
		<delete dir="${APP_ROOT}/obj"/>
		<delete dir="${APP_ROOT}/dist"/>
		<delete dir="${APP_ROOT}/generated"/>
		<delete dir="${APP_ROOT}/doc"/>
		<delete file="${APP_ROOT}/${swfOut}"/>
		<delete dir = "${APP_ROOT}/${doxygen.dir}" if="exists.doxygen" />
		<!--
		<delete> 
			<fileset dir="${DEPLOY_DIR}" includes="Main.swf"/> 
		</delete> 
	-->
	</target>

</project>