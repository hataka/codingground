
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      CheckBoxExample
 *  Source:     F:\Flash\ApacheFlex\mx\controls\CheckBox\CheckBoxExample.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2017.07.17 17:57:59 JST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.controls.CheckBox;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.filters.*;
import mx.styles.*;
import spark.components.Application;
import spark.components.HGroup;
import spark.components.Label;
import spark.components.Panel;
import spark.components.TextArea;
import spark.components.VGroup;


[Frame(extraClass="_CheckBoxExample_FlexInit")]

[Frame(factoryClass="_CheckBoxExample_mx_managers_SystemManager")]


public class CheckBoxExample
    extends spark.components.Application
{

    [Bindable]
	/**
 * @private
 **/
    public var breadCB : mx.controls.CheckBox;

    [Bindable]
	/**
 * @private
 **/
    public var cartItems : spark.components.TextArea;

    [Bindable]
	/**
 * @private
 **/
    public var couponCB : mx.controls.CheckBox;

    [Bindable]
	/**
 * @private
 **/
    public var eggsCB : mx.controls.CheckBox;

    [Bindable]
	/**
 * @private
 **/
    public var milkCB : mx.controls.CheckBox;





    /**
     * @private
     **/
    public function CheckBoxExample()
    {
        super();

        mx_internal::_document = this;




        // layer initializers

       
        // properties
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_CheckBoxExample_Array1_c);


        // events












    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings
        //  initialize component styles
        if (!this.styleDeclaration)
        {
            this.styleDeclaration = new CSSStyleDeclaration(null, styleManager);
        }

        this.styleDeclaration.defaultFactory = function():void
        {
            this.fontSize = 24;
        };


        // ambient styles
        mx_internal::_CheckBoxExample_StylesInit();

                         
    }
 
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }



            import mx.controls.Alert;

            // This event handler adds and deletes items from the shopping cart.
            private function modifyCart():void {
                cartItems.text = "";

                if(milkCB.selected) {
                    cartItems.text += "milk" + "\n";
                }

                if(eggsCB.selected) {
                    cartItems.text += "eggs" + "\n";
                }

                if(breadCB.selected) { 
                    cartItems.text +="bread" + "\n";
                }
            }

           // This event handler opens the Halo Alert control.
           private function sendMessage():void {
                if(couponCB.selected) {
                    Alert.show("You will receive coupons.");
                } else {
                    Alert.show("You will not receive any coupons.");
                }
           }
        



    //  supporting function definitions for properties, events, styles, effects
private function _CheckBoxExample_Array1_c() : Array
{
	var temp : Array = [_CheckBoxExample_Panel1_c()];
	return temp;
}

private function _CheckBoxExample_Panel1_c() : spark.components.Panel
{
	var temp : spark.components.Panel = new spark.components.Panel();
	temp.title = "Halo CheckBox Control Example";
	temp.percentWidth = 75.0;
	temp.percentHeight = 75.0;
	temp.horizontalCenter = 0;
	temp.verticalCenter = 0;
	temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_CheckBoxExample_Array2_c);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _CheckBoxExample_Array2_c() : Array
{
	var temp : Array = [_CheckBoxExample_HGroup1_c()];
	return temp;
}

private function _CheckBoxExample_HGroup1_c() : spark.components.HGroup
{
	var temp : spark.components.HGroup = new spark.components.HGroup();
	temp.left = 10;
	temp.right = 10;
	temp.top = 10;
	temp.bottom = 10;
	temp.mxmlContent = [_CheckBoxExample_VGroup1_c(), _CheckBoxExample_VGroup2_c()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _CheckBoxExample_VGroup1_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.mxmlContent = [_CheckBoxExample_CheckBox1_i(), _CheckBoxExample_CheckBox2_i(), _CheckBoxExample_CheckBox3_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _CheckBoxExample_CheckBox1_i() : mx.controls.CheckBox
{
	var temp : mx.controls.CheckBox = new mx.controls.CheckBox();
	temp.label = "milk";
	temp.addEventListener("click", __milkCB_click);
	temp.id = "milkCB";
	if (!temp.document) temp.document = this;
	milkCB = temp;
	mx.binding.BindingManager.executeBindings(this, "milkCB", milkCB);
	return temp;
}

/**
 * @private
 **/
public function __milkCB_click(event:flash.events.MouseEvent):void
{
	modifyCart();
}

private function _CheckBoxExample_CheckBox2_i() : mx.controls.CheckBox
{
	var temp : mx.controls.CheckBox = new mx.controls.CheckBox();
	temp.label = "eggs";
	temp.addEventListener("click", __eggsCB_click);
	temp.id = "eggsCB";
	if (!temp.document) temp.document = this;
	eggsCB = temp;
	mx.binding.BindingManager.executeBindings(this, "eggsCB", eggsCB);
	return temp;
}

/**
 * @private
 **/
public function __eggsCB_click(event:flash.events.MouseEvent):void
{
	modifyCart();
}

private function _CheckBoxExample_CheckBox3_i() : mx.controls.CheckBox
{
	var temp : mx.controls.CheckBox = new mx.controls.CheckBox();
	temp.label = "bread";
	temp.addEventListener("click", __breadCB_click);
	temp.id = "breadCB";
	if (!temp.document) temp.document = this;
	breadCB = temp;
	mx.binding.BindingManager.executeBindings(this, "breadCB", breadCB);
	return temp;
}

/**
 * @private
 **/
public function __breadCB_click(event:flash.events.MouseEvent):void
{
	modifyCart();
}

private function _CheckBoxExample_VGroup2_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.mxmlContent = [_CheckBoxExample_Label1_c(), _CheckBoxExample_TextArea1_i(), _CheckBoxExample_CheckBox4_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _CheckBoxExample_Label1_c() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.text = "Items in my cart ";
	if (!temp.document) temp.document = this;
	return temp;
}

private function _CheckBoxExample_TextArea1_i() : spark.components.TextArea
{
	var temp : spark.components.TextArea = new spark.components.TextArea();
	temp.width = 300;
	temp.height = 50;
	temp.setStyle("verticalScrollPolicy", "off");
	temp.id = "cartItems";
	if (!temp.document) temp.document = this;
	cartItems = temp;
	mx.binding.BindingManager.executeBindings(this, "cartItems", cartItems);
	return temp;
}

private function _CheckBoxExample_CheckBox4_i() : mx.controls.CheckBox
{
	var temp : mx.controls.CheckBox = new mx.controls.CheckBox();
	temp.label = "Send me coupons for items in my cart";
	temp.selected = true;
	temp.setStyle("color", 255);
	temp.addEventListener("click", __couponCB_click);
	temp.id = "couponCB";
	if (!temp.document) temp.document = this;
	couponCB = temp;
	mx.binding.BindingManager.executeBindings(this, "couponCB", couponCB);
	return temp;
}

/**
 * @private
 **/
public function __couponCB_click(event:flash.events.MouseEvent):void
{
	sendMessage();
}




    mx_internal var _CheckBoxExample_StylesInit_done:Boolean = false;

    mx_internal function _CheckBoxExample_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_CheckBoxExample_StylesInit_done)
            return;
        else
            mx_internal::_CheckBoxExample_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }




}

}
