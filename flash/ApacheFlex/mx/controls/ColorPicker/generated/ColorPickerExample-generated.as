
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      ColorPickerExample
 *  Source:     F:\Flash\ApacheFlex\mx\controls\ColorPicker\ColorPickerExample.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2016.04.28 20:31:58 JST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.VBox;
import mx.controls.ColorPicker;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.filters.*;
import mx.styles.*;
import spark.components.Application;
import spark.components.Label;
import spark.components.Panel;
import spark.components.VGroup;


[Frame(extraClass="_ColorPickerExample_FlexInit")]

[Frame(factoryClass="_ColorPickerExample_mx_managers_SystemManager")]


public class ColorPickerExample
    extends spark.components.Application
    implements mx.binding.IBindingClient
{

/**
 * @private
 **/
    public var _ColorPickerExample_Label2 : spark.components.Label;

/**
 * @private
 **/
    public var _ColorPickerExample_VBox1 : mx.containers.VBox;

    [Bindable]
	/**
 * @private
 **/
    public var cp : mx.controls.ColorPicker;





    /**
     * @private
     **/
    public function ColorPickerExample()
    {
        super();

        mx_internal::_document = this;


        var bindings:Array = _ColorPickerExample_bindingsSetup();
        var watchers:Array = [];

        var target:Object = this;

        if (_watcherSetupUtil == null)
        {
            var watcherSetupUtilClass:Object = getDefinitionByName("_ColorPickerExampleWatcherSetupUtil");
            watcherSetupUtilClass["init"](null);
        }

        _watcherSetupUtil.setup(this,
                    function(propertyName:String):* { return target[propertyName]; },
                    function(propertyName:String):* { return ColorPickerExample[propertyName]; },
                    bindings,
                    watchers);

        mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
        mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // layer initializers

       
        // properties
        this.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_ColorPickerExample_Array1_c);


        // events










        for (var i:uint = 0; i < bindings.length; i++)
        {
            Binding(bindings[i]).execute();
        }


    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings
        //  initialize component styles
        if (!this.styleDeclaration)
        {
            this.styleDeclaration = new CSSStyleDeclaration(null, styleManager);
        }

        this.styleDeclaration.defaultFactory = function():void
        {
            this.fontSize = 24;
        };


        // ambient styles
        mx_internal::_ColorPickerExample_StylesInit();

                         
    }
 
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }




    //  supporting function definitions for properties, events, styles, effects
private function _ColorPickerExample_Array1_c() : Array
{
	var temp : Array = [_ColorPickerExample_Panel1_c()];
	return temp;
}

private function _ColorPickerExample_Panel1_c() : spark.components.Panel
{
	var temp : spark.components.Panel = new spark.components.Panel();
	temp.title = "Halo ColorPicker Control Example";
	temp.percentWidth = 75.0;
	temp.percentHeight = 75.0;
	temp.horizontalCenter = 0;
	temp.verticalCenter = 0;
	temp.mxmlContentFactory = new mx.core.DeferredInstanceFromFunction(_ColorPickerExample_Array2_c);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _ColorPickerExample_Array2_c() : Array
{
	var temp : Array = [_ColorPickerExample_VGroup1_c()];
	return temp;
}

private function _ColorPickerExample_VGroup1_c() : spark.components.VGroup
{
	var temp : spark.components.VGroup = new spark.components.VGroup();
	temp.left = 10;
	temp.right = 10;
	temp.top = 10;
	temp.bottom = 10;
	temp.mxmlContent = [_ColorPickerExample_Label1_c(), _ColorPickerExample_ColorPicker1_i(), _ColorPickerExample_VBox1_i(), _ColorPickerExample_Label2_i()];
	if (!temp.document) temp.document = this;
	return temp;
}

private function _ColorPickerExample_Label1_c() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.percentWidth = 100.0;
	temp.text = "Select the background color of the Halo VBox container.";
	temp.setStyle("color", 255);
	if (!temp.document) temp.document = this;
	return temp;
}

private function _ColorPickerExample_ColorPicker1_i() : mx.controls.ColorPicker
{
	var temp : mx.controls.ColorPicker = new mx.controls.ColorPicker();
	temp.showTextField = true;
	temp.selectedColor = 16777215;
	temp.id = "cp";
	if (!temp.document) temp.document = this;
	cp = temp;
	mx.binding.BindingManager.executeBindings(this, "cp", cp);
	return temp;
}

private function _ColorPickerExample_VBox1_i() : mx.containers.VBox
{
	var temp : mx.containers.VBox = new mx.containers.VBox();
	temp.percentWidth = 100.0;
	temp.percentHeight = 100.0;
	temp.setStyle("borderStyle", "solid");
	temp.id = "_ColorPickerExample_VBox1";
	if (!temp.document) temp.document = this;
	_ColorPickerExample_VBox1 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ColorPickerExample_VBox1", _ColorPickerExample_VBox1);
	return temp;
}

private function _ColorPickerExample_Label2_i() : spark.components.Label
{
	var temp : spark.components.Label = new spark.components.Label();
	temp.setStyle("color", 255);
	temp.id = "_ColorPickerExample_Label2";
	if (!temp.document) temp.document = this;
	_ColorPickerExample_Label2 = temp;
	mx.binding.BindingManager.executeBindings(this, "_ColorPickerExample_Label2", _ColorPickerExample_Label2);
	return temp;
}


    //  binding mgmt
    private function _ColorPickerExample_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():uint
            {

                return (cp.selectedColor);
            },
            function(_sourceFunctionReturnValue:uint):void
            {
                _ColorPickerExample_VBox1.setStyle("backgroundColor", _sourceFunctionReturnValue);
            },
            "_ColorPickerExample_VBox1.backgroundColor"
            );

        result[1] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = "selectedColor: 0x" + (cp.selectedColor.toString(16));
                return (result == undefined ? null : String(result));
            },
            null,
            "_ColorPickerExample_Label2.text"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (ColorPickerExample)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;


    mx_internal var _ColorPickerExample_StylesInit_done:Boolean = false;

    mx_internal function _ColorPickerExample_StylesInit():void
    {
        //  only add our style defs to the style manager once
        if (mx_internal::_ColorPickerExample_StylesInit_done)
            return;
        else
            mx_internal::_ColorPickerExample_StylesInit_done = true;
            
        var style:CSSStyleDeclaration;
        var effects:Array;
                    

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

        styleManager.initProtoChainRoots();
    }



    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

}

}
