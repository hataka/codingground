<!--====================================================================-->
<!-- << j561.htm >>                                                     -->
<!--                                                                    -->
<!--  JAVAプログラミング　　　　　　　　　　　　　　　　　　　　　　　  -->
<!--                                                                    -->
<!--====================================================================-->

<html>
<head>
  <title>JAVAプログラミング</title>
</head>

<body bgcolor="white" text="black">

<pre>
////////////////////////////////////////////////////////////////////////////////
//  << j561.java >>
//
//  スレッド（６）：デッドロック
//
//　　２つのスレッドが互いに相手のロックの解放を待ち、先に進めない状態をいう。
//
//　　例えば、２つのスレッドを想定する。
//　　スレッド１は、オブジェクトａ、オブジェクトｂの順にロックをかけ、
//　　２つを確保した時点で、変数countを１増加する計算を実行する。
//    スレッド２は、オブジェクトｂ、オブジェクトａの順に確保していき、２つを
//　　確保した時点で、変数countを１加算する計算を実行する。
//   
//    スレッド１が、まずオブジェクトａを確保し、次にオブジェクトｂを確保しよう
//　　とするとき、スレッド２がオブジェクトｂをすでに確保していたら、スレッド１は
//　　オブジェクトｂを確保できない。またスレッド２もオブジェクトａを確保できない。
//　　この結果、スレッド１もスレッド２も停止してしまう。
//　　このような状態はデッドロックである。
//
//　　防止するするには、２つのオブジェクトが同じ順にオブジェクトをロックする
//　　ようにすればよい。
//
////////////////////////////////////////////////////////////////////////////////
</pre>

</body>
</html>
