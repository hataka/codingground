// -*- mode: java -*- Time-stamp: <09/05/19 16:28:13 kazuhiko>
/*====================================================================
 * name: j231.java 
 * created : Time-stamp: <09/06/26(金) 18:05:23 hata>
 * $Id$
 * Programmed by kahata
 * To compile:
 * To run:
 * links: http://jubilo.cis.ibaraki.ac.jp/~isemba/PROGRAM/JAVA/java.shtml
 *   http://jubilo.cis.ibaraki.ac.jp/~isemba/PROGRAM/JAVA/CLASS/j231.htm
 * description: Java プログラミング(基礎と応用)  仙波一郎
 * ====================================================================*/
////////////////////////////////////////////////////////////////////////////////
//  << j231.java >>
//
//  クラス（３）：メソッド（インスタンスメソッドとクラスメソッド）
//
//  ●インスタンスメソッド
//
//  　・クラス内で定義されたメソッドをインスタンスメソッドという。
//　　・インスタンスメソッドは、生成されたオブジェクトごとにそれぞれ存在する。
//
//  　○インスタンスメソッドの定義
//
//　　　　メソッドの型　メソッド名（引数）｛
//　　　　　　メソッドの記述
//　　　　｝
//
//　　○インスタンスメソッドの呼び出し。
//
//　　　　オブジェクトを指す変数名.インスタンスメソッド名(引数)
//
//　●クラスメソッド
//
//　　・クラス内で、予約語staticをつけて定義されたメソッドをクラスメソッドという。
//　　　staticメソッドとも呼ばれる。
//　　　そのクラスから生成されたオブジェクトで共有される。
//  　・クラスメソッドは、そのクラスのオブジェクトがひとつもないときでも存在する。
//
//　　○クラスメソッドの定義
//
//　　　　static  メソッドの型　メソッド名（引数）｛
//　　　　　メソッドの記述
//　　　　｝
//
//　　○クラスメソッドの呼び出し。
//
//　　　　クラス名.クラスメソッド名(引数)
//　　　　オブジェクトを指す変数名.インスタンスメソッド名(引数)
//
//  ●例
//
//　　class C {
//  　　// インスタンスメソッド(f)の定義。
//  　　void f() { 
//    　　・・・
//   　 }
//    　// クラスメソッド(g)の定義。
//  　　static void g() { 
//    　　・・・
//  　　}
//      public static void main(String args[]) {
//        ・・・
//      }
// 　}
//
////////////////////////////////////////////////////////////////////////////////
