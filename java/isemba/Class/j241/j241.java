// -*- mode: java -*- Time-stamp: <2009-06-27 11:40:20 kahata>
/*====================================================================
 * name: j241.java 
 * created : Time-stamp: <09/06/27(土) 11:40:02 hata>
 * $Id$
 * Programmed by kahata
 * To compile:
 * To run:
 * links: http://jubilo.cis.ibaraki.ac.jp/~isemba/PROGRAM/JAVA/java.shtml
 *   http://jubilo.cis.ibaraki.ac.jp/~isemba/PROGRAM/JAVA/CLASS/j241.htm
 * description: Java プログラミング(基礎と応用)  仙波一郎
 * ====================================================================*/
////////////////////////////////////////////////////////////////////////////////
//  << j241.java >>
//
//  クラス（４）：継承（概説）
//
//  ●継承
//
//  　・新しいクラスが既存のクラスのメンバを引き継ぐことを継承という。
//　　　新しいクラスに既存のクラスのメンバを再度書かなくても、新しいクラスは、
//　　　既存のクラスのメンバを利用することができる。
//　　　既存のクラスを親クラス（またはスーパークラス）、新しいクラスを子クラス
//    　（またはサブクラス）という。
//
//　　・どのクラスも親クラスは高々ひとつしかもてない。
//
//　　・どのクラスも子クラスはいくつでももてる。また、子クラスの子クラスと
//　　　いくらでも多段にクラスを拡張できる。
//　　　このようなクラス全体をクラス階層という。
//
//　　・継承の利点は、ソフトウェアの再利用性を高める点にある。
//
//  ●子クラスの定義
//
//　　    class Parent { // 親クラス(Parent)の定義                    
//          ・・・                           
//        }                                  
//        class Child extends Parent { // 子クラス(Child)の定義       
//          ・・・                           
//        }                                  
//
//　　・子クラス(Child)のオブジェクトを生成すると、親クラス(Parent)に属する
//　　　メンバを格納する記憶領域も確保され、子クラス(Child)から親クラスの
//　　　メンバにもアクセスできる。
//
//　　・extendsを書かなかった場合、自動的にObjectというクラスが親クラスになる。
//　　　Objectクラスは、すべてのクラスの共通の親クラスである。
//
///////////////////////////////////////////////////////////////////////////////
