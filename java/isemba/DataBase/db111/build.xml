<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="db111">
    <property environment="env"/>
    <dirname property="ant.file.dir" file="${ant.file}"/>
    <property name="ECLIPSE_HOME" value="C:/eclipse461/eclipse/"/>
    <property name="FD_PATH" value="F:\VCSharp\Flashdevelop5.1.1-LL\FlashDevelop\Bin\Debug\FlashDevelop.exe" />
    <!--
    <property name="${env.JAVA_HOME}" value="C:\Program Files\Java\jdk1.8.0_102"/>
    <property name="PATH" value="C:/Program Files/Java/jdk1.8.0_102/bin"/>
     -->
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <property name="appname" value="${ant.project.name}"/>
   	<path id="db111.classpath">
        <pathelement location="."/>
        <pathelement path="${java.class.path}" />
        <!-- <pathelement location="../CommonLibrary/Lib.class"/> -->
        <!-- <pathelement location="../swt-4.5-win32-win32-x86_64/swt.jar"/>-->
        <!-- <pathelement location="F:/codingground/swt.snippets/java/swt-4.5-win32-win32-x86_64/swt.jar"/> -->
        <pathelement location="f:/java/lib/swt.jar"/>
    </path>
    <target name="init">
        <copy includeemptydirs="false" todir=".">
            <fileset dir=".">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete>
            <fileset dir="." includes="**/*.class"/>
            <fileset dir="." includes="**/*.bak"/>
        </delete>
        <!--  <delete dir="./commonLibrary"/> -->
    </target>

    <target name="clearall">
       <delete>
          <fileset dir="." includes="**/*.class"/>
          <!--
          <fileset dir="." includes="**/.classpath"/>
          <fileset dir="." includes="**/.project"/>
          <fileset dir="." includes="**/*.bat"/>
           -->
          <fileset dir="." includes="**/.gitignore"/>
          <fileset dir="." includes="**/*.wsf"/>
          <fileset dir="." includes="**/*.bak"/>
          <fileset dir="." includes="**/*.ppr"/>
          <fileset dir="." includes="**/*.fdp"/>
          <fileset dir="." includes="**/FDTreeMenu.xml"/>
          <fileset dir="." includes="**/Manifest.txt"/>
       </delete>
       <!--
       <delete dir="./commomLibrary"/>
       <delete dir="./CommonLibrary"/>
       <delete dir="./commonLibrary"/>
        -->
    </target>

    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
      <echo message="${ant.project.name}: ${ant.file}"/>
      <javac srcdir="."
         includes="**/*.java"
         destdir="."
         encoding="utf-8"
         debug="true"
         includeAntRuntime="no"
         fork="true"
         classpathref="${appname}.classpath">
      </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>

    <!--this file was created by Eclipse Runnable JAR Export Wizard-->
    <!--ANT 1.7 is required                                        -->
    <target name="create_jar" depends="build">
      <!--  <jar destfile="F:/java/SWT/git.eclipse/Snippet2/${appname}.jar" filesetmanifest="mergewithoutmain"> -->
      <jar destfile="${basedir}/${appname}.jar" filesetmanifest="mergewithoutmain">
        <manifest>
           <attribute name="Main-Class" value="${appname}"/>
           <attribute name="Class-Path" value="."/>
        </manifest>
        <!-- <fileset dir="F:/java/SWT/git.eclipse/Snippet2"/> -->
        <fileset dir="${basedir}" includes="*.class"/>
        <!-- <zipfileset excludes="META-INF/*.SF" src="F:/java/lib/swt.jar"/> -->
      </jar>
    </target>

	<target name="run">
        <java classname="db111" failonerror="true" fork="yes">
            <classpath refid="db111.classpath"/>
        </java>
    </target>

    <target name="runjar">
        <java jar="${basedir}/${appname}.jar" failonerror="true" fork="yes">
            <classpath refid="${appname}.classpath"/>
        </java>
    </target>

	<target name="db111">
        <java classname="db111" failonerror="true" fork="yes">
            <classpath refid="db111.classpath"/>
        </java>
    </target>

	<target name="open-fd-project" description="open FD Project" >
	<exec executable="${FD_PATH}" spawn="true">
		<arg value="-reuse" />
		<arg value="${ant.file.dir}/${appname}.fdp" />
	</exec>
	</target>
		<target name="open-src-in-fd" description="open source in FD">
		<exec executable="${FD_PATH}" spawn="true">
			<arg value="-reuse" />
			<arg value="${ant.file.dir}/${appname}.java" />
		</exec>
	</target>



</project>

