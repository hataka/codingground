// -*- mode: gradle -*-  Time-stamp: <2017-05-06 09:31:10 kahata>
/*================================================================
 * title: 仙波一郎 JAVAプログラミング「基礎と応用」 実数演算
 * file: build.gradle
 * path: F:\codingground\java\isemba\Kiso\j113\build.gradle
 * url:  http://localhost/codingground/java/isemba/Kiso/j113/build.gradle
 * created: Time-stamp: <2017-05-06 09:31:10 kahata>
 * revision: $Id$
 * Programmed By: kahata
 * To compile:
 * To run: 
 * link: 
 * description: 
 *================================================================*/
////////////////////////////////////////////////////////////////////
//  << j113.java >>
//
//  基礎（２）：文字コード
//
//　　コンピュータ内部で、文字は数値で表される。文字に対応する数値を文字コード
//　　という。シフトJISコード、EUCコードなどがよく知られている。
//　　Javaでは、Unicode(ユニコードと読む）という文字コードが使われている。
//
//  ●Unicode
//    Javaでは、Unicodeという16ビットの文字コードを使う。
//
//　　シフトJISコードやEUCコードで書かれたJavaソースファイルは、コンパイルを
//　　行う前に、Unicodeへの変換が行われる。この結果、Javaソースファイルを
//　　Unicodeで書かなくても正しくコンパイルされる。
//
//    ・16進4桁のUnicodeの値(0以上65535以下)XXXXを、\、u、XXXXの順に
//　　　書くと文字が表せる。
//      AのUnicodeは、\u0041、1のUnicodeは、\u0031、漢のUnicodeは、\u6f22。
//
//　●エスケープシーケンス
//　　\を最初に付ける書き方をエスケープシーケンスといい、キーボードから入力
//　　できない特殊な文字を表すことができる。
//    \nで改行を表す。
//
////////////////////////////////////////////////////////////////////

apply plugin: "eclipse"
defaultTasks 'runScript'
description = "基礎（２）：文字コード";

task runScript {
  doLast{  
    char a,b,c;
    a = 'A';
    b = '1';
    c = '漢';

    System.out.println("Aの文字は" + a);
    System.out.println("1の文字は" + b);
    System.out.println("漢の文字は" + c);
    System.out.println("Aの文字コードは" + (int)a);
    System.out.println("1の文字コードは" + (int)b);
    System.out.println("漢の文字コードは" + (int)c);
    System.out.println("\n");
    System.out.println("Aの文字は\u0041");
    System.out.println("1の文字は\u0031");
    System.out.println("漢の文字は\u6f22");
  }
}

ant.importBuild('build.xml') {
  antTaskName -> "ant.${antTaskName}".toString()
}
