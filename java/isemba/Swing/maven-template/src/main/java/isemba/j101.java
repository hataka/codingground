//  -*- mode: java -*-  Time-stamp: <08/06/20(金) 17:10:59 hata>
/*================================================================
 * title: 
 * file: j101.java
 * created : Time-stamp: <09/06/16(火) 20:27:01 hata>
 * $Id$
 * To compile:
 * To run:
 *  http://jubilo.cis.ibaraki.ac.jp/~isemba/PROGRAM/JAVA/java.shtml
 *  http://jubilo.cis.ibaraki.ac.jp/~isemba/PROGRAM/JAVA/KISO/j101.htm
 * description: JavaConsoleApplication 
 *================================================================*/
////////////////////////////////////////////////////////////////////
//  << j101.java >>
//
//  基礎（１）：画面への出力
//
//  ●Javaのプログラムは、クラスの定義から構成される。
//　  予約語classの後にクラス名を書き、クラスの定義部分は、{ と } で囲む。
//　　{ と } で囲まれた部分をブロックと呼ぶ。
//
//　  　　class クラス名 {
//      　　 定義部分
//   　　 }
//
//　　　・予約語は、Java言語で特別な意味を持ち、クラス名などに使えない。
//　　　　使うとエラーになる。public,static,voidなども予約語である。
//　    ・クラス名の１文字目は、A-Z, a-z, _, $ のいずれかとする。
//        大小文字は区別される。
//  
//  ●画面への出力は、その機能を持つ文 System.out.println("文字列") で行う。
//    改行を行わないときは、System.out.print("文字列") で行う。
//    文字列は、二重引用符(")で囲む。
//
//　　・実行の単位を文と呼び、セミコロン(;)で区切る。
//　　　System.out.println("文字列")はひとつの文である。
//　　　文は原則として、先頭から順に実行される。
//　　・二重引用符を表示するには、\" と書く。　\は円マークという。
//　　・円マークを表示するには、\\ と書く。
//
//　●ひとまとまりの処理をメソッドといい、名前を付けることができる。
//　　メソッドの本体は、名前の後のブロック内に書く。
//
//  ●注釈
//　　//以降、行の最後までが注釈となる。この部分の記述は実行されない。
//　　他に、/*と*/で囲む書き方、/**と*/で囲む書き方もある。
//
////////////////////////////////////////////////////////////////////
package isemba;

public class j101 { // j101という名前のクラスを定義する。
  public static void main(String args[]) {
    /* mainという名前のメソッドを定義する。
       定義部分は、ブロック内に書く。
       mainメソッドは、Javaで、最初に実行される。*/

    // 文字列の出力。
    System.out.println("ABCDE abcde");

    // 数値の出力。数値は自動的に文字列"12345"に変換される。
    System.out.println(12345);  

    // 漢字の出力。
    System.out.println("明治　大正　昭和　平成");  

    // 二重引用符の出力。
    System.out.println("\"");  

    // 円マークの出力。
    System.out.println("\\");  
  }
}
/*
実行結果

% javac j101.java
% java j101
ABCDE abcde
12345
明治　大正　昭和　平成
"
\
*/
